import * as txt from "txt";
import createHiDPICanvas from "../../lib/hidpi-canvas";
export default function init() {
    var canvas = createHiDPICanvas(1000, 500, 1);
    document.body.appendChild(canvas);
    var stage = new createjs.Stage(canvas);
    var label = "Harland Clarke";
    stage.addChild(new txt.CharacterText({
        text: label,
        font: "lobster",
        lineHeight: 250,
        width: 950,
        height: 150,
        strokeColor: "#444",
        fillColor: null,
        strokeWidth: 2,
        style: Array.from(Array(14).keys()).map(function (val) {
            var hex = val.toString(16);
            var unhex = (14 - val).toString(16);
            return {
                fillColor: val % 2 == 0
                    ? "#FF" + hex + hex + unhex + unhex
                    : "#" + hex + hex + unhex + unhex + "FF"
            };
        }),
        size: 150,
        x: 5,
        y: 5
    }));
    stage.addChild(new txt.CharacterText({
        text: label,
        font: "lobster",
        lineHeight: 150,
        height: 150,
        width: 950,
        strokeColor: "#00aa00",
        strokeWidth: 3,
        style: Array.from(Array(label.length).keys()).map(function (val) {
            return {
                strokeWidth: (1 - Math.sin((val / label.length) * Math.PI)) * 10
            };
        }),
        fillColor: null,
        size: 150,
        x: 5,
        y: 150
    }));
    stage.addChild(new txt.CharacterText({
        text: label,
        font: "lobster",
        lineHeight: 150,
        height: 150,
        width: 950,
        fillColor: null,
        strokeColor: "#f00",
        strokeWidth: 1,
        size: 150,
        x: 5,
        y: 300
    }));
    stage.update();
    return stage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Ryb2tlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZXhhbXBsZXMvQ2hhcmFjdGVyVGV4dC9zdHJva2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEdBQUcsTUFBTSxLQUFLLENBQUM7QUFDM0IsT0FBTyxpQkFBaUIsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxNQUFNLENBQUMsT0FBTyxVQUFVLElBQUk7SUFDMUIsSUFBTSxNQUFNLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxJQUFNLEtBQUssR0FBRyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFekMsSUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUM7SUFFL0IsS0FBSyxDQUFDLFFBQVEsQ0FDWixJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUM7UUFDcEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxJQUFJLEVBQUUsU0FBUztRQUNmLFVBQVUsRUFBRSxHQUFHO1FBQ2YsS0FBSyxFQUFFLEdBQUc7UUFDVixNQUFNLEVBQUUsR0FBRztRQUNYLFdBQVcsRUFBRSxNQUFNO1FBQ25CLFNBQVMsRUFBRSxJQUFJO1FBQ2YsV0FBVyxFQUFFLENBQUM7UUFDZCxLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHO1lBQ3pDLElBQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDN0IsSUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ3RDLE9BQU87Z0JBQ0wsU0FBUyxFQUNQLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQztvQkFDVixDQUFDLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEtBQUs7b0JBQ25DLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUk7YUFDN0MsQ0FBQztRQUNKLENBQUMsQ0FBQztRQUNGLElBQUksRUFBRSxHQUFHO1FBQ1QsQ0FBQyxFQUFFLENBQUM7UUFDSixDQUFDLEVBQUUsQ0FBQztLQUNMLENBQUMsQ0FDSCxDQUFDO0lBRUYsS0FBSyxDQUFDLFFBQVEsQ0FDWixJQUFJLEdBQUcsQ0FBQyxhQUFhLENBQUM7UUFDcEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxJQUFJLEVBQUUsU0FBUztRQUNmLFVBQVUsRUFBRSxHQUFHO1FBQ2YsTUFBTSxFQUFFLEdBQUc7UUFDWCxLQUFLLEVBQUUsR0FBRztRQUNWLFdBQVcsRUFBRSxTQUFTO1FBQ3RCLFdBQVcsRUFBRSxDQUFDO1FBQ2QsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUc7WUFDbkQsT0FBTztnQkFDTCxXQUFXLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRTthQUNqRSxDQUFDO1FBQ0osQ0FBQyxDQUFDO1FBQ0YsU0FBUyxFQUFFLElBQUk7UUFDZixJQUFJLEVBQUUsR0FBRztRQUNULENBQUMsRUFBRSxDQUFDO1FBQ0osQ0FBQyxFQUFFLEdBQUc7S0FDUCxDQUFDLENBQ0gsQ0FBQztJQUVGLEtBQUssQ0FBQyxRQUFRLENBQ1osSUFBSSxHQUFHLENBQUMsYUFBYSxDQUFDO1FBQ3BCLElBQUksRUFBRSxLQUFLO1FBQ1gsSUFBSSxFQUFFLFNBQVM7UUFDZixVQUFVLEVBQUUsR0FBRztRQUNmLE1BQU0sRUFBRSxHQUFHO1FBQ1gsS0FBSyxFQUFFLEdBQUc7UUFDVixTQUFTLEVBQUUsSUFBSTtRQUNmLFdBQVcsRUFBRSxNQUFNO1FBQ25CLFdBQVcsRUFBRSxDQUFDO1FBQ2QsSUFBSSxFQUFFLEdBQUc7UUFDVCxDQUFDLEVBQUUsQ0FBQztRQUNKLENBQUMsRUFBRSxHQUFHO0tBQ1AsQ0FBQyxDQUNILENBQUM7SUFFRixLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDZixPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0eHQgZnJvbSBcInR4dFwiO1xuaW1wb3J0IGNyZWF0ZUhpRFBJQ2FudmFzIGZyb20gXCIuLi8uLi9saWIvaGlkcGktY2FudmFzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KCkge1xuICBjb25zdCBjYW52YXMgPSBjcmVhdGVIaURQSUNhbnZhcygxMDAwLCA1MDAsIDEpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNhbnZhcyk7XG4gIGNvbnN0IHN0YWdlID0gbmV3IGNyZWF0ZWpzLlN0YWdlKGNhbnZhcyk7XG5cbiAgY29uc3QgbGFiZWwgPSBcIkhhcmxhbmQgQ2xhcmtlXCI7XG5cbiAgc3RhZ2UuYWRkQ2hpbGQoXG4gICAgbmV3IHR4dC5DaGFyYWN0ZXJUZXh0KHtcbiAgICAgIHRleHQ6IGxhYmVsLFxuICAgICAgZm9udDogXCJsb2JzdGVyXCIsXG4gICAgICBsaW5lSGVpZ2h0OiAyNTAsXG4gICAgICB3aWR0aDogOTUwLFxuICAgICAgaGVpZ2h0OiAxNTAsXG4gICAgICBzdHJva2VDb2xvcjogXCIjNDQ0XCIsXG4gICAgICBmaWxsQ29sb3I6IG51bGwsXG4gICAgICBzdHJva2VXaWR0aDogMixcbiAgICAgIHN0eWxlOiBBcnJheS5mcm9tKEFycmF5KDE0KS5rZXlzKCkpLm1hcCh2YWwgPT4ge1xuICAgICAgICBjb25zdCBoZXggPSB2YWwudG9TdHJpbmcoMTYpO1xuICAgICAgICBjb25zdCB1bmhleCA9ICgxNCAtIHZhbCkudG9TdHJpbmcoMTYpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGZpbGxDb2xvcjpcbiAgICAgICAgICAgIHZhbCAlIDIgPT0gMFxuICAgICAgICAgICAgICA/IFwiI0ZGXCIgKyBoZXggKyBoZXggKyB1bmhleCArIHVuaGV4XG4gICAgICAgICAgICAgIDogXCIjXCIgKyBoZXggKyBoZXggKyB1bmhleCArIHVuaGV4ICsgXCJGRlwiXG4gICAgICAgIH07XG4gICAgICB9KSxcbiAgICAgIHNpemU6IDE1MCxcbiAgICAgIHg6IDUsXG4gICAgICB5OiA1XG4gICAgfSlcbiAgKTtcblxuICBzdGFnZS5hZGRDaGlsZChcbiAgICBuZXcgdHh0LkNoYXJhY3RlclRleHQoe1xuICAgICAgdGV4dDogbGFiZWwsXG4gICAgICBmb250OiBcImxvYnN0ZXJcIixcbiAgICAgIGxpbmVIZWlnaHQ6IDE1MCxcbiAgICAgIGhlaWdodDogMTUwLFxuICAgICAgd2lkdGg6IDk1MCxcbiAgICAgIHN0cm9rZUNvbG9yOiBcIiMwMGFhMDBcIixcbiAgICAgIHN0cm9rZVdpZHRoOiAzLFxuICAgICAgc3R5bGU6IEFycmF5LmZyb20oQXJyYXkobGFiZWwubGVuZ3RoKS5rZXlzKCkpLm1hcCh2YWwgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN0cm9rZVdpZHRoOiAoMSAtIE1hdGguc2luKCh2YWwgLyBsYWJlbC5sZW5ndGgpICogTWF0aC5QSSkpICogMTBcbiAgICAgICAgfTtcbiAgICAgIH0pLFxuICAgICAgZmlsbENvbG9yOiBudWxsLFxuICAgICAgc2l6ZTogMTUwLFxuICAgICAgeDogNSxcbiAgICAgIHk6IDE1MFxuICAgIH0pXG4gICk7XG5cbiAgc3RhZ2UuYWRkQ2hpbGQoXG4gICAgbmV3IHR4dC5DaGFyYWN0ZXJUZXh0KHtcbiAgICAgIHRleHQ6IGxhYmVsLFxuICAgICAgZm9udDogXCJsb2JzdGVyXCIsXG4gICAgICBsaW5lSGVpZ2h0OiAxNTAsXG4gICAgICBoZWlnaHQ6IDE1MCxcbiAgICAgIHdpZHRoOiA5NTAsXG4gICAgICBmaWxsQ29sb3I6IG51bGwsXG4gICAgICBzdHJva2VDb2xvcjogXCIjZjAwXCIsXG4gICAgICBzdHJva2VXaWR0aDogMSxcbiAgICAgIHNpemU6IDE1MCxcbiAgICAgIHg6IDUsXG4gICAgICB5OiAzMDBcbiAgICB9KVxuICApO1xuXG4gIHN0YWdlLnVwZGF0ZSgpO1xuICByZXR1cm4gc3RhZ2U7XG59XG4iXX0=