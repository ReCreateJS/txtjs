import * as txt from "txt";
import createHiDPICanvas from "../../lib/hidpi-canvas";
export default function init() {
    var canvas = createHiDPICanvas(1000, 500, 1);
    document.body.appendChild(canvas);
    var stage = new createjs.Stage(canvas);
    var label = "Harland Clarke";
    stage.addChild(new txt.Text({
        text: label,
        font: "lobster",
        lineHeight: 250,
        width: 950,
        height: 150,
        strokeColor: "#444",
        strokeWidth: 2,
        style: Array.from(Array(14).keys()).map(function (val) {
            var hex = val.toString(16);
            var unhex = (14 - val).toString(16);
            return {
                fillColor: val % 2 == 0
                    ? "#FF" + hex + hex + unhex + unhex
                    : "#" + hex + hex + unhex + unhex + "FF"
            };
        }),
        size: 150,
        x: 5,
        y: 5
    }));
    stage.addChild(new txt.Text({
        text: label,
        font: "lobster",
        lineHeight: 150,
        height: 150,
        width: 950,
        strokeColor: "#00aa00",
        strokeWidth: 3,
        style: Array.from(Array(label.length).keys()).map(function (val) {
            return {
                strokeWidth: (1 - Math.sin((val / label.length) * Math.PI)) * 10
            };
        }),
        fillColor: null,
        size: 150,
        x: 5,
        y: 150
    }));
    stage.addChild(new txt.Text({
        text: label,
        font: "lobster",
        lineHeight: 150,
        height: 150,
        width: 950,
        fillColor: null,
        strokeColor: "#f00",
        strokeWidth: 1,
        size: 150,
        x: 5,
        y: 300
    }));
    stage.update();
    return stage;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Ryb2tlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZXhhbXBsZXMvVGV4dC9zdHJva2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEdBQUcsTUFBTSxLQUFLLENBQUM7QUFDM0IsT0FBTyxpQkFBaUIsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxNQUFNLENBQUMsT0FBTyxVQUFVLElBQUk7SUFDMUIsSUFBTSxNQUFNLEdBQUcsaUJBQWlCLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNsQyxJQUFNLEtBQUssR0FBRyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFekMsSUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUM7SUFFL0IsS0FBSyxDQUFDLFFBQVEsQ0FDWixJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDWCxJQUFJLEVBQUUsS0FBSztRQUNYLElBQUksRUFBRSxTQUFTO1FBQ2YsVUFBVSxFQUFFLEdBQUc7UUFDZixLQUFLLEVBQUUsR0FBRztRQUNWLE1BQU0sRUFBRSxHQUFHO1FBQ1gsV0FBVyxFQUFFLE1BQU07UUFDbkIsV0FBVyxFQUFFLENBQUM7UUFDZCxLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHO1lBQ3pDLElBQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDN0IsSUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ3RDLE9BQU87Z0JBQ0wsU0FBUyxFQUNQLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQztvQkFDVixDQUFDLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEtBQUs7b0JBQ25DLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUk7YUFDN0MsQ0FBQztRQUNKLENBQUMsQ0FBQztRQUNGLElBQUksRUFBRSxHQUFHO1FBQ1QsQ0FBQyxFQUFFLENBQUM7UUFDSixDQUFDLEVBQUUsQ0FBQztLQUNMLENBQUMsQ0FDSCxDQUFDO0lBRUYsS0FBSyxDQUFDLFFBQVEsQ0FDWixJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDWCxJQUFJLEVBQUUsS0FBSztRQUNYLElBQUksRUFBRSxTQUFTO1FBQ2YsVUFBVSxFQUFFLEdBQUc7UUFDZixNQUFNLEVBQUUsR0FBRztRQUNYLEtBQUssRUFBRSxHQUFHO1FBQ1YsV0FBVyxFQUFFLFNBQVM7UUFDdEIsV0FBVyxFQUFFLENBQUM7UUFDZCxLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRztZQUNuRCxPQUFPO2dCQUNMLFdBQVcsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFO2FBQ2pFLENBQUM7UUFDSixDQUFDLENBQUM7UUFDRixTQUFTLEVBQUUsSUFBSTtRQUNmLElBQUksRUFBRSxHQUFHO1FBQ1QsQ0FBQyxFQUFFLENBQUM7UUFDSixDQUFDLEVBQUUsR0FBRztLQUNQLENBQUMsQ0FDSCxDQUFDO0lBRUYsS0FBSyxDQUFDLFFBQVEsQ0FDWixJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDWCxJQUFJLEVBQUUsS0FBSztRQUNYLElBQUksRUFBRSxTQUFTO1FBQ2YsVUFBVSxFQUFFLEdBQUc7UUFDZixNQUFNLEVBQUUsR0FBRztRQUNYLEtBQUssRUFBRSxHQUFHO1FBQ1YsU0FBUyxFQUFFLElBQUk7UUFDZixXQUFXLEVBQUUsTUFBTTtRQUNuQixXQUFXLEVBQUUsQ0FBQztRQUNkLElBQUksRUFBRSxHQUFHO1FBQ1QsQ0FBQyxFQUFFLENBQUM7UUFDSixDQUFDLEVBQUUsR0FBRztLQUNQLENBQUMsQ0FDSCxDQUFDO0lBRUYsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2YsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHh0IGZyb20gXCJ0eHRcIjtcbmltcG9ydCBjcmVhdGVIaURQSUNhbnZhcyBmcm9tIFwiLi4vLi4vbGliL2hpZHBpLWNhbnZhc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgY29uc3QgY2FudmFzID0gY3JlYXRlSGlEUElDYW52YXMoMTAwMCwgNTAwLCAxKTtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpO1xuICBjb25zdCBzdGFnZSA9IG5ldyBjcmVhdGVqcy5TdGFnZShjYW52YXMpO1xuXG4gIGNvbnN0IGxhYmVsID0gXCJIYXJsYW5kIENsYXJrZVwiO1xuXG4gIHN0YWdlLmFkZENoaWxkKFxuICAgIG5ldyB0eHQuVGV4dCh7XG4gICAgICB0ZXh0OiBsYWJlbCxcbiAgICAgIGZvbnQ6IFwibG9ic3RlclwiLFxuICAgICAgbGluZUhlaWdodDogMjUwLFxuICAgICAgd2lkdGg6IDk1MCxcbiAgICAgIGhlaWdodDogMTUwLFxuICAgICAgc3Ryb2tlQ29sb3I6IFwiIzQ0NFwiLFxuICAgICAgc3Ryb2tlV2lkdGg6IDIsXG4gICAgICBzdHlsZTogQXJyYXkuZnJvbShBcnJheSgxNCkua2V5cygpKS5tYXAodmFsID0+IHtcbiAgICAgICAgY29uc3QgaGV4ID0gdmFsLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgY29uc3QgdW5oZXggPSAoMTQgLSB2YWwpLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBmaWxsQ29sb3I6XG4gICAgICAgICAgICB2YWwgJSAyID09IDBcbiAgICAgICAgICAgICAgPyBcIiNGRlwiICsgaGV4ICsgaGV4ICsgdW5oZXggKyB1bmhleFxuICAgICAgICAgICAgICA6IFwiI1wiICsgaGV4ICsgaGV4ICsgdW5oZXggKyB1bmhleCArIFwiRkZcIlxuICAgICAgICB9O1xuICAgICAgfSksXG4gICAgICBzaXplOiAxNTAsXG4gICAgICB4OiA1LFxuICAgICAgeTogNVxuICAgIH0pXG4gICk7XG5cbiAgc3RhZ2UuYWRkQ2hpbGQoXG4gICAgbmV3IHR4dC5UZXh0KHtcbiAgICAgIHRleHQ6IGxhYmVsLFxuICAgICAgZm9udDogXCJsb2JzdGVyXCIsXG4gICAgICBsaW5lSGVpZ2h0OiAxNTAsXG4gICAgICBoZWlnaHQ6IDE1MCxcbiAgICAgIHdpZHRoOiA5NTAsXG4gICAgICBzdHJva2VDb2xvcjogXCIjMDBhYTAwXCIsXG4gICAgICBzdHJva2VXaWR0aDogMyxcbiAgICAgIHN0eWxlOiBBcnJheS5mcm9tKEFycmF5KGxhYmVsLmxlbmd0aCkua2V5cygpKS5tYXAodmFsID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdHJva2VXaWR0aDogKDEgLSBNYXRoLnNpbigodmFsIC8gbGFiZWwubGVuZ3RoKSAqIE1hdGguUEkpKSAqIDEwXG4gICAgICAgIH07XG4gICAgICB9KSxcbiAgICAgIGZpbGxDb2xvcjogbnVsbCxcbiAgICAgIHNpemU6IDE1MCxcbiAgICAgIHg6IDUsXG4gICAgICB5OiAxNTBcbiAgICB9KVxuICApO1xuXG4gIHN0YWdlLmFkZENoaWxkKFxuICAgIG5ldyB0eHQuVGV4dCh7XG4gICAgICB0ZXh0OiBsYWJlbCxcbiAgICAgIGZvbnQ6IFwibG9ic3RlclwiLFxuICAgICAgbGluZUhlaWdodDogMTUwLFxuICAgICAgaGVpZ2h0OiAxNTAsXG4gICAgICB3aWR0aDogOTUwLFxuICAgICAgZmlsbENvbG9yOiBudWxsLFxuICAgICAgc3Ryb2tlQ29sb3I6IFwiI2YwMFwiLFxuICAgICAgc3Ryb2tlV2lkdGg6IDEsXG4gICAgICBzaXplOiAxNTAsXG4gICAgICB4OiA1LFxuICAgICAgeTogMzAwXG4gICAgfSlcbiAgKTtcblxuICBzdGFnZS51cGRhdGUoKTtcbiAgcmV0dXJuIHN0YWdlO1xufVxuIl19