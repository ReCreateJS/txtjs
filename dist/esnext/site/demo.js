import * as txt from "txt";
import circle from "../lib/circle-path";
import createHiDPICanvas from "../lib/hidpi-canvas";
var pathText, text, stage;
export default function createDemo(exampleElement) {
    var canvas = createHiDPICanvas(500, 300, 2);
    canvas.style.maxWidth = "100%";
    exampleElement.appendChild(canvas);
    stage = new createjs.Stage(canvas);
    text = new txt.Text({
        text: "This is TxtJS",
        font: "lobster",
        align: txt.Align.MIDDLE_CENTER,
        style: Array.from(Array(14).keys()).map(function (val) {
            var hex = val.toString(16);
            var unhex = (14 - val).toString(16);
            return {
                fillColor: val % 2 == 0
                    ? "#FF" + hex + hex + unhex + unhex
                    : "#" + hex + hex + unhex + unhex + "FF"
            };
        }),
        strokeWidth: 1,
        strokeColor: "#000",
        width: 500,
        height: 300,
        size: 100,
        start: 2700,
        x: 250,
        y: 150,
        debug: true
    });
    stage.addChild(text);
    pathText = new txt.PathText({
        text: "Text on a path!",
        font: "arimo",
        align: txt.PathAlign.Center,
        path: circle(0, 0, 200),
        rotation: 0,
        initialTracking: 200,
        width: 1000,
        height: 600,
        size: 50,
        start: 2700,
        x: 500,
        y: 300
    });
    stage.addChild(pathText);
    createjs.Ticker.on("tick", tick);
    createjs.Ticker.framerate = 30;
}
var counter = 0;
var counter2 = 0;
function tick(event) {
    pathText.tracking = 50 + Math.sin(counter) * 200;
    text.align =
        Math.sin(counter) > 0 ? txt.Align.BOTTOM_RIGHT : txt.Align.TOP_LEFT;
    counter = (counter + 0.05) % 7;
    counter2 = (counter2 + 3) % 500;
    text.width = 100 + counter2;
    text.x = 450 - counter2 / 2;
    pathText.font = counter > 2.5 ? "arimo" : "lobster";
    pathText.rotation = pathText.rotation + (1 % 360);
    text.layout();
    pathText.layout();
    stage.update(event);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVtby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NpdGUvZGVtby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssR0FBRyxNQUFNLEtBQUssQ0FBQztBQUMzQixPQUFPLE1BQU0sTUFBTSxvQkFBb0IsQ0FBQztBQUN4QyxPQUFPLGlCQUFpQixNQUFNLHFCQUFxQixDQUFDO0FBRXBELElBQUksUUFBUSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUM7QUFFMUIsTUFBTSxDQUFDLE9BQU8sVUFBVSxVQUFVLENBQUMsY0FBYztJQUMvQyxJQUFNLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQztJQUMvQixjQUFjLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLEtBQUssR0FBRyxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFbkMsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztRQUNsQixJQUFJLEVBQUUsZUFBZTtRQUNyQixJQUFJLEVBQUUsU0FBUztRQUNmLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLGFBQWE7UUFDOUIsS0FBSyxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLFVBQUEsR0FBRztZQUN6QyxJQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzdCLElBQU0sS0FBSyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN0QyxPQUFPO2dCQUNMLFNBQVMsRUFDUCxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7b0JBQ1YsQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEtBQUssR0FBRyxLQUFLO29CQUNuQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxJQUFJO2FBQzdDLENBQUM7UUFDSixDQUFDLENBQUM7UUFDRixXQUFXLEVBQUUsQ0FBQztRQUNkLFdBQVcsRUFBRSxNQUFNO1FBQ25CLEtBQUssRUFBRSxHQUFHO1FBQ1YsTUFBTSxFQUFFLEdBQUc7UUFDWCxJQUFJLEVBQUUsR0FBRztRQUNULEtBQUssRUFBRSxJQUFJO1FBQ1gsQ0FBQyxFQUFFLEdBQUc7UUFDTixDQUFDLEVBQUUsR0FBRztRQUNOLEtBQUssRUFBRSxJQUFJO0tBQ1osQ0FBQyxDQUFDO0lBRUgsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVyQixRQUFRLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQzFCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsSUFBSSxFQUFFLE9BQU87UUFDYixLQUFLLEVBQUUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNO1FBQzNCLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUM7UUFDdkIsUUFBUSxFQUFFLENBQUM7UUFDWCxlQUFlLEVBQUUsR0FBRztRQUNwQixLQUFLLEVBQUUsSUFBSTtRQUNYLE1BQU0sRUFBRSxHQUFHO1FBQ1gsSUFBSSxFQUFFLEVBQUU7UUFDUixLQUFLLEVBQUUsSUFBSTtRQUNYLENBQUMsRUFBRSxHQUFHO1FBQ04sQ0FBQyxFQUFFLEdBQUc7S0FDUCxDQUFDLENBQUM7SUFFSCxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRXpCLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNqQyxRQUFRLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFDakMsQ0FBQztBQUVELElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztBQUNoQixJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFFakIsU0FBUyxJQUFJLENBQUMsS0FBSztJQUNqQixRQUFRLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUNqRCxJQUFJLENBQUMsS0FBSztRQUNSLElBQUksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFFdEUsT0FBTyxHQUFHLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQixRQUFRLEdBQUcsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQztJQUM1QixJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFFcEQsUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBRWxELElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNkLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUNsQixLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0eHQgZnJvbSBcInR4dFwiO1xuaW1wb3J0IGNpcmNsZSBmcm9tIFwiLi4vbGliL2NpcmNsZS1wYXRoXCI7XG5pbXBvcnQgY3JlYXRlSGlEUElDYW52YXMgZnJvbSBcIi4uL2xpYi9oaWRwaS1jYW52YXNcIjtcblxubGV0IHBhdGhUZXh0LCB0ZXh0LCBzdGFnZTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlRGVtbyhleGFtcGxlRWxlbWVudCkge1xuICBjb25zdCBjYW52YXMgPSBjcmVhdGVIaURQSUNhbnZhcyg1MDAsIDMwMCwgMik7XG4gIGNhbnZhcy5zdHlsZS5tYXhXaWR0aCA9IFwiMTAwJVwiO1xuICBleGFtcGxlRWxlbWVudC5hcHBlbmRDaGlsZChjYW52YXMpO1xuICBzdGFnZSA9IG5ldyBjcmVhdGVqcy5TdGFnZShjYW52YXMpO1xuXG4gIHRleHQgPSBuZXcgdHh0LlRleHQoe1xuICAgIHRleHQ6IFwiVGhpcyBpcyBUeHRKU1wiLFxuICAgIGZvbnQ6IFwibG9ic3RlclwiLFxuICAgIGFsaWduOiB0eHQuQWxpZ24uTUlERExFX0NFTlRFUixcbiAgICBzdHlsZTogQXJyYXkuZnJvbShBcnJheSgxNCkua2V5cygpKS5tYXAodmFsID0+IHtcbiAgICAgIGNvbnN0IGhleCA9IHZhbC50b1N0cmluZygxNik7XG4gICAgICBjb25zdCB1bmhleCA9ICgxNCAtIHZhbCkudG9TdHJpbmcoMTYpO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZmlsbENvbG9yOlxuICAgICAgICAgIHZhbCAlIDIgPT0gMFxuICAgICAgICAgICAgPyBcIiNGRlwiICsgaGV4ICsgaGV4ICsgdW5oZXggKyB1bmhleFxuICAgICAgICAgICAgOiBcIiNcIiArIGhleCArIGhleCArIHVuaGV4ICsgdW5oZXggKyBcIkZGXCJcbiAgICAgIH07XG4gICAgfSksXG4gICAgc3Ryb2tlV2lkdGg6IDEsXG4gICAgc3Ryb2tlQ29sb3I6IFwiIzAwMFwiLFxuICAgIHdpZHRoOiA1MDAsXG4gICAgaGVpZ2h0OiAzMDAsXG4gICAgc2l6ZTogMTAwLFxuICAgIHN0YXJ0OiAyNzAwLFxuICAgIHg6IDI1MCxcbiAgICB5OiAxNTAsXG4gICAgZGVidWc6IHRydWVcbiAgfSk7XG5cbiAgc3RhZ2UuYWRkQ2hpbGQodGV4dCk7XG5cbiAgcGF0aFRleHQgPSBuZXcgdHh0LlBhdGhUZXh0KHtcbiAgICB0ZXh0OiBcIlRleHQgb24gYSBwYXRoIVwiLFxuICAgIGZvbnQ6IFwiYXJpbW9cIixcbiAgICBhbGlnbjogdHh0LlBhdGhBbGlnbi5DZW50ZXIsXG4gICAgcGF0aDogY2lyY2xlKDAsIDAsIDIwMCksXG4gICAgcm90YXRpb246IDAsXG4gICAgaW5pdGlhbFRyYWNraW5nOiAyMDAsXG4gICAgd2lkdGg6IDEwMDAsXG4gICAgaGVpZ2h0OiA2MDAsXG4gICAgc2l6ZTogNTAsXG4gICAgc3RhcnQ6IDI3MDAsXG4gICAgeDogNTAwLFxuICAgIHk6IDMwMFxuICB9KTtcblxuICBzdGFnZS5hZGRDaGlsZChwYXRoVGV4dCk7XG5cbiAgY3JlYXRlanMuVGlja2VyLm9uKFwidGlja1wiLCB0aWNrKTtcbiAgY3JlYXRlanMuVGlja2VyLmZyYW1lcmF0ZSA9IDMwO1xufVxuXG5sZXQgY291bnRlciA9IDA7XG5sZXQgY291bnRlcjIgPSAwO1xuXG5mdW5jdGlvbiB0aWNrKGV2ZW50KSB7XG4gIHBhdGhUZXh0LnRyYWNraW5nID0gNTAgKyBNYXRoLnNpbihjb3VudGVyKSAqIDIwMDtcbiAgdGV4dC5hbGlnbiA9XG4gICAgTWF0aC5zaW4oY291bnRlcikgPiAwID8gdHh0LkFsaWduLkJPVFRPTV9SSUdIVCA6IHR4dC5BbGlnbi5UT1BfTEVGVDtcblxuICBjb3VudGVyID0gKGNvdW50ZXIgKyAwLjA1KSAlIDc7XG4gIGNvdW50ZXIyID0gKGNvdW50ZXIyICsgMykgJSA1MDA7XG4gIHRleHQud2lkdGggPSAxMDAgKyBjb3VudGVyMjtcbiAgdGV4dC54ID0gNDUwIC0gY291bnRlcjIgLyAyO1xuICBwYXRoVGV4dC5mb250ID0gY291bnRlciA+IDIuNSA/IFwiYXJpbW9cIiA6IFwibG9ic3RlclwiO1xuXG4gIHBhdGhUZXh0LnJvdGF0aW9uID0gcGF0aFRleHQucm90YXRpb24gKyAoMSAlIDM2MCk7XG5cbiAgdGV4dC5sYXlvdXQoKTtcbiAgcGF0aFRleHQubGF5b3V0KCk7XG4gIHN0YWdlLnVwZGF0ZShldmVudCk7XG59XG4iXX0=